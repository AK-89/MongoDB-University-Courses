Chapter 0: An Introduction to the MongoDB 4.0 Release

Lab: Start Up a Replica Set
vagrant up
vagrant ssh

LAB 1

mkdir -p /data/db/m040/repl/{1,2,3}

vi rs1_linux.conf
systemLog:
  destination: file
  path: "/data/db/m040/repl/1/mongod.log"
  logAppend: true
storage:
  dbPath: "/data/db/m040/repl/1"
  journal:
    enabled: true
processManagement:
  fork: true
net:
  bindIpAll: true
  port: 27017
replication:
  oplogSizeMB: 100
  replSetName: M040
  
vi rs2_linux.conf
systemLog:
  destination: file
  logAppend: true
  path: "/data/db/m040/repl/2/mongod.log"
storage:
  dbPath: "/data/db/m040/repl/2"
  journal:
    enabled: true
processManagement:
  fork: true
net:
  bindIpAll: true
  port: 27027
replication:
  oplogSizeMB: 10
  replSetName: M040 
  
vi rs3_linux.conf
systemLog:
  destination: file
  path: "/data/db/m040/repl/3/mongod.log"
  logAppend: true
storage:
  dbPath: "/data/db/m040/repl/3"
  journal:
    enabled: true
processManagement:
  fork: true
net:
  bindIpAll: true
  port: 27037
replication:
  oplogSizeMB: 10
  replSetName: M040
  
  
mongod -f rs1_linux.conf
mongod -f rs2_linux.conf
mongod -f rs3_linux.conf

mongo --eval 'rs.initiate()'
mongo --eval 'rs.add("m040:27027");rs.add("m040:27037")'
mongo --eval 'rs.status()'

mongo --quiet /shared/validate_lab1.js
1602589782

Chapter 1: Replica Set Transactions
Lab: Error Handling

Answers:
Code Block A
in handle_commit(s)

def handle_commit(s):
    """
    Handles the commit operation.
    """
    # LAB - needs error handling
    while True:
        try:
            s.commit_transaction()
            break
        except (pymongo.errors.OperationFailure, pymongo.errors.ConnectionFailure) as exc:
            if exc.has_error_label("UnknownTransactionCommitResult"):
                print("Commit error: {} retrying commit ... ".format(exc))
                continue
            else:
                raise
				
Code Block B
in load_data(q, batch, uri)

# LAB - needs error handling
with mc.start_session() as s:
  while True:
      try:
          batch_total_population,batch_docs = write_batch(batch, mc, s)
          break
      except (pymongo.errors.OperationFailure, pymongo.errors.ConnectionFailure) as exc:
          if exc.has_error_label("TransientTransactionError"):
             print("Error detected: {} - abort".format(exc))
             s.abort_transaction()
             continue
          else:
             raise
			 
			 
Chapter 4: Aggregation Framework Improvements

Lab: Type Conversions

Answer:
281245	

Chapter 6: ODBC Driver for BI Connector

Using Excel with the ODBC Driver
Answer:
3160